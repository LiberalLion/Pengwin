# Universal Windows Platform

# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64|ARM64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

steps:
- task: DownloadBuildArtifacts@0
  inputs:
    buildType: 'specific'
    project: '84ac49ca-47e0-4979-b8ee-cd1cf8fe4e74'
    pipeline: '1'
    specificBuildWithTriggering: true
    buildVersionToDownload: 'latest'
    downloadType: 'single'
    artifactName: 'drop'
    downloadPath: '$(System.ArtifactsDirectory)'
- task: CmdLine@2
  inputs:
    script: |
      copy $(System.ArtifactsDirectory)\drop\install_amd64_rootfs.tar.gz x64\install.tar.gz
      copy $(System.ArtifactsDirectory)\drop\install_arm64_rootfs.tar.gz ARM64\install.tar.gz
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
- task: DownloadSecureFile@1
  name: signingCert
  inputs:
    secureFile: 'store.pfx'
- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/t:Build /m /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:PackageCertificateThumbprint=""  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)" /p:PackageCertificatePassword="1"'
    platform: 'x64'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true
    msbuildArchitecture: 'x64'


- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**\bin\$(BuildConfiguration)\**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
#- task: store-publish@0
#  inputs:
#    serviceEndpoint: 'Whitewater Foundry'
#    appId: '9NV1GV1PXZ6P'
#    packagePath: 
#    force: false
#    skipPolling: false
#    deletePackages: true
#    numberOfPackagesToKeep: '1'
- task: store-flight@0
  inputs:
    serviceEndpoint: 'Whitewater Foundry'
    appId: '9NV1GV1PXZ6P'
    flightName: 'Azure Pipelines'
    packagePath: '$(System.ArtifactDirectory)\**\*.appxupload'
    force: true
    skipPolling: false
    deletePackages: true
    numberOfPackagesToKeep: '1'